const fs = require('fs');
const path = require('path');

// Read the current file as binary to preserve exact structure
const filePath = path.join(__dirname, 'humanizer.js');
let content = fs.readFileSync(filePath, 'utf8');

// Fix the encoding issues
content = content
  .replace(/üîç/g, 'üîç')
  .replace(/‚úÖ/g, '‚úÖ')
  .replace(/‚ùå/g, '‚ùå')
  .replace(/üìä/g, 'üìä')
  .replace(/üîí/g, 'üîí')
  .replace(/üì∏/g, 'üì∏')
  .replace(/üöÄ/g, 'üöÄ')
  .replace(/üîê/g, 'üîê')
  .replace(/üìö/g, 'üìö')
  .replace(/üîò/g, 'üîò')
  .replace(/üìç/g, 'üìç')
  .replace(/üéâ/g, 'üéâ')
  .replace(/‚è≥/g, '‚è≥')
  .replace(/ü§ñ/g, 'ü§ñ')
  .replace(/üìã/g, 'üìã')
  .replace(/üéØ/g, 'üéØ')
  .replace(/üí•/g, 'üí•')
  .replace(/‚öôÔ∏è/g, '‚öôÔ∏è')
  .replace(/üîÑ/g, 'üîÑ')
  .replace(/‚ö†Ô∏è/g, '‚ö†Ô∏è')
  .replace(/üí°/g, 'üí°')
  .replace(/üí¨/g, 'üí¨')
  .replace(/üéØ/g, 'üéØ')
  .replace(/üåê/g, 'üåê')
  .replace(/üìß/g, 'üìß')
  .replace(/üéÅ/g, 'üéÅ')
  .replace(/üìä/g, 'üìä');

// Check if our method already exists by looking for the end of the class to insert it there
const classEndIndex = content.lastIndexOf('\n}');
const beforeEnd = content.substring(0, classEndIndex);
const afterEnd = content.substring(classEndIndex);

// Check if updateLoginStatus method already exists in the content
if (!content.includes('async updateLoginStatus')) {
  const methodToAdd = `
  async updateLoginStatus(sessionId, status) {
    if (!this.sessionDb) {
      await this.initSessionDatabase();
    }

    return new Promise((resolve, reject) => {
      // Update the status for the given session
      this.sessionDb.run(
        \`UPDATE session_status 
         SET status = ?, last_updated = CURRENT_TIMESTAMP 
         WHERE session_id = ?\`,
        [status, sessionId],
        (err) => {
          if (err) {
            console.error("‚ùå Error updating login status:", err.message);
            reject(err);
          } else {
            console.log(\`‚úÖ Updated login status to: \${status} for session \${sessionId}\`);
            resolve();
          }
        }
      );
    });
  }`;
  
  content = beforeEnd + '\n' + methodToAdd + afterEnd;
}

// Write the file back with proper encoding
fs.writeFileSync(filePath, content, 'utf8');

console.log('‚úÖ Successfully fixed encoding issues and added updateLoginStatus method to humanizer.js');